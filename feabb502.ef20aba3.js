(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{246:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return l})),t.d(n,"Highlight",(function(){return u})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return p}));var a=t(2),i=t(6),r=(t(0),t(250)),o=t(257),c=t(258),s={id:"RecebendoNotificacoes",title:"Recebendo as notifica\xe7\xf5es",hide_title:!0,sidebar_label:"Receiving notifications"},l={id:"Notificacoes/RecebendoNotificacoes",isDocsHomePage:!1,title:"Recebendo as notifica\xe7\xf5es",description:"Receiving notifications",source:"@site/docs\\Notificacoes\\RecebendoNotificacoes.md",permalink:"/documentation/docs/Notificacoes/RecebendoNotificacoes",sidebar_label:"Receiving notifications",sidebar:"someSidebar",previous:{title:"Lightbox",permalink:"/documentation/docs/Lightbox/lightbox"},next:{title:"Entendendo o fluxo das notifica\xe7\xf5es",permalink:"/documentation/docs/Notificacoes/FluxoNotificacoes"}},u=function(e){var n=e.children;e.color;return Object(r.b)("span",{style:{borderRadius:"2px",color:"#009615",padding:"0.2rem"}},n)},d=[{value:"1. Setting the URL for receiving notifications",id:"1-setting-the-url-for-receiving-notifications",children:[]},{value:"2. Consult notification details",id:"2-consult-notification-details",children:[{value:"2.1. Exemplos de respostas:",id:"21-exemplos-de-respostas",children:[]},{value:"2.2. Explanation of response parameters:",id:"22-explanation-of-response-parameters",children:[]},{value:"2.3. Response tags:",id:"23-response-tags",children:[]}]},{value:"3. Notification queue status (callback)",id:"3-notification-queue-status-callback",children:[]},{value:"4. Videos: Notifications",id:"4-videos-notifications",children:[{value:"4.1. Implementing Notifications - Callback or Auto Return (via Playground)",id:"41-implementing-notifications---callback-or-auto-return-via-playground",children:[]},{value:"4.2. Configuring your notifications URL (Integration Gerencianet API)",id:"42-configuring-your-notifications-url-integration-gerencianet-api",children:[]}]},{value:"5. IP addresses of Gerencianet for delivery of callbacks",id:"5-ip-addresses-of-gerencianet-for-delivery-of-callbacks",children:[]},{value:"6. Complementary Information: status of transactions, carnets and subscriptions",id:"6-complementary-information-status-of-transactions-carnets-and-subscriptions",children:[]},{value:"7. Next steps",id:"7-next-steps",children:[]}],b={Highlight:u,rightToc:d};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{className:"titulo"},"Receiving notifications"),Object(r.b)("div",{className:"subtitulo"},Object(r.b)("p",null,'Notifications allow you to be informed when a transaction (also called a "charge") has changed status. This way, you will be able to identify when a charge is paid, for example.'),Object(r.b)("p",null,"When a transaction has a notification URL registered (attribute ",Object(r.b)("code",null,"notification_url"),"), Gerencianet triggers a ",Object(r.b)("code",null,"POST"),' to this URL every time the charge status changes. This notification has a specific token, which will be the same throughout the entire "change cycle" of the transaction. For example:'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"A charge has been generated. Your system receives a ",Object(r.b)("code",null,"POST")," from Gerencianet containing the notification token ",Object(r.b)("code",null,"09027955-5e06-4ff0-a9c7-46b47b8f1b27")," and informing the transaction status - in this case, ",Object(r.b)("code",null,"new"),";")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"That same charge had the payment method set, so its status changed to ",Object(r.b)("code",null,"waiting")," and then we will send a new notification to your system containing the same token ",Object(r.b)("code",null,"09027955-5e06-4ff0-a9c7-46b47b8f1b27"),";")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Subsequently, this same charge had the payment confirmed, so the status changes to ",Object(r.b)("code",null,"paid")," and again your system gets a notification, still with the same token ",Object(r.b)("code",null,"09027955-5e06-4ff0-a9c7-46b47b8f1b27"),"."))),Object(r.b)("p",null,"A ",Object(r.b)("code",null,"POST")," will contain only one piece of information: a notification token. That is, if the registered URL is prepared to read the token in the variable ",Object(r.b)("code",null,"$_POST","['notification']")," and consult this information, the answer will be all informational data about the change suffered by the charge, such as, for example, the previous and current status of the charge. To do so, you need to register a notification URL in the charge and prepare it to show/store the notification token."),Object(r.b)("p",null,"For security, transaction information will only be sent when your system queries it using the received notification token."),Object(r.b)("p",null,"Any time the integrator consults this notification token, it will obtain the most current charge information, all sorted according to events. Every change in status generates a notification."),Object(r.b)("p",null,"On the tab ",Object(r.b)("code",null,"Notification History")," it is possible to track every notification ",Object(r.b)("code",null,"POST")," triggered by our system. If the integrator queries the sent token, we consider that the notification was successful. If not, try again."),Object(r.b)("p",null,"To view the table containing all the status of a transaction, booklet or subscription, access ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../VisaoGeral/statusTransacoes"}),"this link")," in our documentation."),Object(r.b)("p",null,"The rest of this page has the detailed procedures, but you need to install one of our libraries on your server to run the sample code. ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../Instalacao/introducao"}),"Make sure the Gerencianet SDK has been installed"),"."),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("h2",{id:"1-setting-the-url-for-receiving-notifications"},"1. Setting the URL for receiving notifications"),Object(r.b)("p",null,"PTo proceed with the execution of the following codes, ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../Installation/introduction"}),"make sure that the Gerencianet SDK has been installed"),".\nYou will be able to define a URL that will receive notifications during the creation of the charge (",Object(r.b)("code",null,"createCharge"),") or later (",Object(r.b)("code",null,"updateChargeMetadata"),")."),Object(r.b)("p",null,"A transaction generated through the API may undergo several status changes depending on the interactions of the payer, the integrator or the operators and banking institutions involved. To keep up with these changes, it is necessary to prepare your system to receive notifications sent by Gerencianet."),Object(r.b)("p",null,"When defining the parameters for creating the transaction, you can ",Object(r.b)("a",{target:"_blank",href:"https://gnetbr.com/ryeGKbdl_D"},"set a notification url"),". This URL will receive a ",Object(r.b)("em",{parentName:"p"},"token")," when a transaction has a status change. With this ",Object(r.b)("em",{parentName:"p"},"token"),", your application will be able to query our webservice to obtain the transaction status."),Object(r.b)(o.a,{defaultValue:"code",values:[{label:"C\xf3digo: definir URL de notifica\xe7\xe3o",value:"code"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"code",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"$options = [\n  'client_id' => $clientId,\n  'client_secret' => $clientSecret,\n  'sandbox' => true\n],\n\n$metadata = array('notification_url'=>'http://sua_url_aqui');\n\n$body = [\n  'items' => $items,\n  'metadata' => $metadata\n];\n\ntry {\n  $api = new Gerencianet($options);\n  $charge = $api->createCharge([], $body);\n}\n")))),Object(r.b)("br",null),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Dica para testar as notifica\xe7\xf5es (callbacks) facilmente com o WebhookInbox")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"To test notifications, we suggest using the ",Object(r.b)("a",{href:"http://webhookinbox.com/",target:"_blank",title:"Link Externo"},"WebhookInbox"),", which is a free service to inspect HTTP requests. You will be able to create a temporary URL to use it in the attribute ",Object(r.b)("code",null,"notification_url"),", in order to visualize, in an easy and friendly way, the POSTs made for your application. To generate the URL that will receive the request, access ",Object(r.b)("a",{href:"http://webhookinbox.com/",target:"_blank",title:"Link Externo"},"WebhookInbox")," and click ",Object(r.b)("code",null,"Create An Inbox"),"."),Object(r.b)("p",{parentName:"div"},"WebhookInbox will record HTTP requests and allow you to inspect them to check ",Object(r.b)("em",{parentName:"p"},"Headers")," and ",Object(r.b)("em",{parentName:"p"},"Body")," of the requests. In this way, you will be able to start developing your integration with Gerencianet and test the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"RecebendoNotificacoes"}),"Notification URL (callbacks)")," even if you don't already have a public URL available."))),Object(r.b)("br",null),Object(r.b)("p",null,"If you do not register a URL at the time of creating the transaction, you can do so through the metadata change method, through a ",Object(r.b)("code",null,"PUT")," request for the route ",Object(r.b)("code",null,"/v1/charge/:id /metadata"),"."),Object(r.b)("p",null,"You should note that the notification process is carried out in two steps to ensure the security of the reported data:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"In the first one, your system is notified that there was a change related to a transaction (the webservice sends a ",Object(r.b)("code",null,"POST")," with a ",Object(r.b)("em",{parentName:"p"},"token")," to you);")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"In the second, your system queries - passing the ",Object(r.b)("em",{parentName:"p"},"token")," you received as a parameter to Gestoranet to know details about this change."))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h2",{id:"2-consult-notification-details"},"2. Consult notification details"),Object(r.b)("p",null,"Gerencianet considers that a notification was successful only after this consult. As long as your system does not consult the notification details, it will continue to be notified:"),Object(r.b)(o.a,{defaultValue:"php",values:[{label:"PHP",value:"php"},{label:"Python",value:"python"},{label:"NodeJS",value:"js"},{label:".NET",value:"c"},{label:"Java",value:"java"},{label:"GO",value:"go"},{label:"Ruby",value:"ruby"},{label:"Delphi",value:"delphi"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"php",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),'<?php\n \nrequire __DIR__.\'/../../vendor/autoload.php\'; // caminho relacionado a SDK\n \nuse Gerencianet\\Exception\\GerencianetException;\nuse Gerencianet\\Gerencianet;\n \n$clientId = \'informe_seu_client_id\'; \n$clientSecret = \'informe_seu_client_secret\'; \n \n$options = [\n  \'client_id\' => $clientId,\n  \'client_secret\' => $clientSecret,\n  \'sandbox\' => true \n];\n \n/*\n* This token will be received in your variable that represents the POST parameters\n* Ex.: $_POST[\'notification\']\n*/\n$token = $_POST["notification"];\n \n$params = [\n  \'token\' => $token\n];\n \ntry {\n    $api = new Gerencianet($options);\n    $chargeNotification = $api->getNotification($params, []);\n  // To identify the current status of your transaction you must count the number of situations contained in the array, as the last position always holds the last status. See the sample responses in the "Example Responses" section below.\n  \n  // See below how to access the ID and String referring to the last transaction status.\n    \n// Counts the size of the data array (which stores the result)\n    $i = count($chargeNotification["data"]);\n// Get the last Object chargeStatus\n    $ultimoStatus = $chargeNotification["data"][$i-1];\n// Accessing the Status array\n    $status = $ultimoStatus["status"];\n// Getting the transaction ID  \n    $charge_id = $ultimoStatus["identifiers"]["charge_id"];\n// Getting the current status String\n    $statusAtual = $status["current"];\n    \n   // With this information, you will be able to consult your database and update the status of the specific transaction, once you have the "charge_id" and the STATUS String\n  \n    echo "O id da transa\xe7\xe3o \xe9: ".$charge_id." seu novo status \xe9: ".$statusAtual;\n \n    //print_r($chargeNotification);\n} catch (GerencianetException $e) {\n    print_r($e->code);\n    print_r($e->error);\n    print_r($e->errorDescription);\n} catch (Exception $e) {\n    print_r($e->getMessage());\n}\n'))),Object(r.b)(c.a,{value:"python",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"from gerencianet import Gerencianet\n \noptions = {\n    'client_id': 'client_id',\n    'client_secret': 'client_secret',\n    'sandbox': True\n}\n \ngn = Gerencianet(options)\n \nparams = {\n    'token': notification\n}\n \nresponse =  gn.get_notification(params=params)\n"))),Object(r.b)(c.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"'use strict';\n \nvar Gerencianet = require('gn-api-sdk-node');\n \nvar clientId = 'your_client_id';\nvar clientSecret = 'your_client_secret';\n \nvar options = {\n  client_id: clientId,\n  client_secret: clientSecret,\n  sandbox: true\n}\n \n/*\n* Este token ser\xe1 recebido em sua vari\xe1vel que representa os par\xe2metros do POST\n* Ex.: req.body['notification']\n*/\nvar token = 'token_da_notificacao';\n \nvar params = {\n  token: token\n}\n \nvar gerencianet = new Gerencianet(options);\n \ngerencianet\n  .getNotification(params)\n  .then(console.log)\n  .catch(console.log)\n  .done();\n"))),Object(r.b)(c.a,{value:"c",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// supposing that this is a post route\npublic void NotificationRoute(notification) {\n  var param = new {\n      token = notification\n    };\n \n    dynamic endpoints = new Endpoints("client_id", "client_secret", true);\n    response = endpoints.GetNotification(param);\n}\n'))),Object(r.b)(c.a,{value:"java",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'/* Para que a SDK Java funcione corretamente, \xe9 necess\xe1rio que a instancia\xe7\xe3o do m\xf3dulo seja feita atrav\xe9s da cria\xe7\xe3o de um objeto do tipo Gerencianet.\n\nSempre que quisermos chamar uma fun\xe7\xe3o da API, basta invocar o m\xe9todo call do objeto Gerencianet, passando como par\xe2metro o nome do m\xe9todo, os par\xe2metros da requisi\xe7\xe3o (sempre ser\xe1 um HashMap<String, String>), e o "body", que consiste nas propriedades a serem passadas como argumento na chamada de um fun\xe7\xe3o da SDK. O "body" pode ser declarado de duas formas: um JSONObject ou um Map<String, Object>.\n\nEsta estrutura \xe9 necess\xe1ria para representar o corpo da requisi\xe7\xe3o http que \xe9 enviada \xe0 um determinado endpoint. Se o "body" for um JSONObject, o retorno do m\xe9todo call ser\xe1 um JSONObject, se for um Map<String, Object>, o retorno do m\xe9todo call ser\xe1 um Map<String, Object>\n\nA seguir, disponibilizamos links de nosso Github mostrando duas formas diferentes de retorno: JSONObject\ne Map<String, Object>\n\n\nJSONObject\n\nhttps://github.com/gerencianet/gn-api-sdk-java-examples/blob/master/src/main/java/br/com/gerencianet/notification/json/DetailNotification.java\n\n\nMap<String, Object>\n\nhttps://github.com/gerencianet/gn-api-sdk-java-examples/blob/master/src/main/java/br/com/gerencianet/notification/map/DetailNotification.java\n\n*/\n'))),Object(r.b)(c.a,{value:"go",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-go"}),'// No c\xf3digo de exemplo de uso da SDK de Go, definimos as credenciais de acesso \xe0 API (Client_Id e Client_Secret) e o ambiente a ser usado (sandbox como \'true\' ou \'false\') dentro de um arquivo espec\xedfico (configs.go), que est\xe1 localizado no diret\xf3rio "_examples/configs". Essas credenciais s\xe3o exportadas atrav\xe9s da vari\xe1vel \'Credentials\'.\n\npackage main\n\nimport (\n  "fmt"\n  "github.com/gerencianet/gn-api-sdk-go/gerencianet"\n  "github.com/gerencianet/gn-api-sdk-go/_examples/configs"\n)\n\nfunc main(){\n  \n  credentials := configs.Credentials\n  gn := gerencianet.NewGerencianet(credentials)\n\n  res, err := gn.GetNotification("token") // subsituir pelo token recebido\n\n  if err != nil {\n    fmt.Println(err)\n  } else {\n    fmt.Println(res)\n  }\n}\n'))),Object(r.b)(c.a,{value:"ruby",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'require "gerencianet"\n \noptions = {\n  client_id: "client_id",\n  client_secret: "client_secret",\n  sandbox: true\n}\n \n# Este token ser\xe1 recebido em sua vari\xe1vel que representa os par\xe2metros do POST\n# Ex.: req.body[\'notification\']\n \nparams = {\n  token: "token_da_notificacao"\n}\n \ngerencianet = Gerencianet.new(options)\ngerencianet.get_notification(params: params)\n'))),Object(r.b)(c.a,{value:"delphi",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),"interface\nfunction GetNotifications(Token: Integer): String;\n\nimplementation\nuses\n  uGerenciaNetClientUtilities, uGerenciaClient;\n\nfunction GetNotifications(Token: Integer): String;\nvar\n  Params: String;\nbegin\n  EnableService( 'GerenciaNet.dll' ); \n    ConfigureService( ToPAnsiChar( 'client_id' ),ToPAnsiChar( 'client_secret' ),'sandbox','config.json',''); \n    GerenciaNetAuthorize();\n\n    Params := CreateRequestParams( [ 'token='+Token ] ).Text;\n    Result := ExecuteGerenciaNetRequest( 'getNotification',Params,'','' );\nend;\n")))),Object(r.b)("br",null),Object(r.b)("h3",{id:"21-exemplos-de-respostas"},"2.1. Exemplos de respostas:"),Object(r.b)("p",null,"A seguir alguns exemplos de respostas de notifica\xe7\xf5es para transa\xe7\xf5es, assinaturas, carn\xeas e link de pagamento:"),Object(r.b)(o.a,{defaultValue:"transacao",values:[{label:"Transa\xe7\xe3o",value:"transacao"},{label:"Assinatura",value:"assinatura"},{label:"Carn\xea",value:"carne"},{label:"Link de Pagamento",value:"link"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"transacao",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "code": 200, // HTTP return "200" informing that the request was successful\n    "data": [\n        {\n            "created_at": "2022-02-20 09:12:23", // date of array status change "id 1"\n            "custom_id": null,\n            "id": 1, // order indicator, starting at 1. It is incremented for each change of a notification token. This is useful if you need to keep track of which change you have already processed.\n            "identifiers": { // identifiers representing the charge\n                "charge_id": 24342333\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "charge" // type of charge that was changed (in this case, "charge" means that the change occurred in a transaction)\n        },\n        {\n            "created_at": "2022-02-20 09:12:23", // date of array status change "id 2"\n            "custom_id": null, // charge identifier defined by the integrator, if exist\n            "id": 2,\n            "identifiers": { // identifiers representing the charge\n                "charge_id": 24342333\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "charge" // type of charge that was changed (in this case, "charge" means that the change occurred in a transaction)\n        },\n        {\n            "created_at": "2022-03-31 09:14:34", // date of array status change "id 3"\n            "custom_id": null, // charge identifier defined by the integrator, if any\n            "id": 3,\n            "identifiers": { // identifiers representing the charge\n                "charge_id": 24342333\n            },\n            "status": {\n                "current": "unpaid",\n                "previous": "waiting"\n            },\n            "type": "charge" // type of charge that was changed (in this case, "charge" means that the change occurred in a transaction)\n        },\n        {\n            "created_at": "2022-04-03 07:33:30", // date of array status change "id 4"\n            "custom_id": null, // charge identifier defined by the integrator, if any\n            "id": 4,\n            "identifiers": { // identifiers representing the charge\n                "charge_id": 24342333\n            },\n            "received_by_bank_at": "2022-04-02", // charge payment date\n            "status": {\n                "current": "paid", // CURRENT transaction status: paid ("paid")\n                "previous": "unpaid" // PREVIOUS transaction status: unpaid\n            },\n            "type": "charge", // type of charge that was changed (in this case, "charge" means that the change occurred in a transaction)\n            "value": 6990 // value accompanying the change. This tag will exist when the change is a payment confirmation, informing the amount paid that was confirmed\n        }\n    ]\n}\n\n\n// All transactions have status, which represents the status of that transaction. Check the complete list for dealings in your system\n'))),Object(r.b)(c.a,{value:"assinatura",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200,\n  "data": [\n    {\n      "id": 1,\n      "type": "subscription",\n      "custom_id": null,\n      "status": {\n        "current": "new",\n        "previous": null\n      },\n      "identifiers": {\n        "subscription_id": 11976\n      },\n      "created_at": "2021-07-20 00:20:16"\n    },\n    {\n      "id": 2,\n      "type": "subscription_charge",\n      "custom_id": null,\n      "status": {\n        "current": "new",\n        "previous": null\n      },\n      "identifiers": {\n        "subscription_id": 11976,\n        "charge_id": 2396478\n      },\n      "created_at": "2021-07-20 00:20:16"\n    },\n    {\n      "id": 3,\n      "type": "subscription_charge",\n      "custom_id": null,\n      "status": {\n        "current": "waiting",\n        "previous": "new"\n      },\n      "identifiers": {\n        "subscription_id": 11976,\n        "charge_id": 2396478\n      },\n      "created_at": "2021-07-20 00:20:27"\n    },\n    {\n      "id": 4,\n      "type": "subscription",\n      "custom_id": null,\n      "status": {\n        "current": "active",\n        "previous": "new"\n      },\n      "identifiers": {\n        "subscription_id": 11976\n      },\n      "created_at": "2021-07-20 00:20:28"\n    },\n    {\n      "id": 5,\n      "type": "subscription_charge",\n      "custom_id": null,\n      "status": {\n        "current": "paid",\n        "previous": "waiting"\n      },\n      "identifiers": {\n        "subscription_id": 11976,\n        "charge_id": 2396478\n      },\n      "created_at": "2021-07-22 03:19:17",\n      "value": 12390,\n      "received_by_bank_at": "2022-03-28" // data do pagamento da cobran\xe7a\n    },\n    {\n      "id": 6,\n      "type": "subscription_charge",\n      "custom_id": null,\n      "status": {\n        "current": "new",\n        "previous": null\n      },\n      "identifiers": {\n        "subscription_id": 11976,\n        "charge_id": 2688053\n      },\n      "created_at": "2021-08-20 00:30:09"\n    },\n    {\n      "id": 7,\n      "type": "subscription_charge",\n      "custom_id": null,\n      "status": {\n        "current": "waiting",\n        "previous": "new"\n      },\n      "identifiers": {\n        "subscription_id": 11976,\n        "charge_id": 2688053\n      },\n      "created_at": "2021-08-20 00:30:09"\n    },\n    {\n      "id": 8,\n      "type": "subscription_charge",\n      "custom_id": null,\n      "status": {\n        "current": "unpaid",\n        "previous": "waiting"\n      },\n      "identifiers": {\n        "subscription_id": 11976,\n        "charge_id": 2688053\n      },\n      "created_at": "2021-08-25 01:32:38"\n    },\n    {\n      "id": 9,\n      "type": "subscription",\n      "custom_id": null,\n      "status": {\n        "current": "canceled",\n        "previous": "active"\n      },\n      "identifiers": {\n        "subscription_id": 11976\n      },\n      "created_at": "2021-08-28 23:26:58"\n    }\n  ]\n}\n'))),Object(r.b)(c.a,{value:"carne",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n    "data": [\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 1, // indicador de ordem, iniciado em 1. \xc9 incrementado para cada mudan\xe7a de um token de notifica\xe7\xe3o. Isso \xe9 \xfatil se voc\xea precisar manter o controle sobre qual altera\xe7\xe3o voc\xea j\xe1 processou\n            "identifiers": { // identificadores que representam a cobran\xe7a\n                "carnet_id": 2512240 // identificador do carn\xea\n            },\n            "status": {\n                "current": "up_to_date", // status do carn\xea (ou seja, carn\xea encontra-se em dia, n\xe3o h\xe1 nenhuma parcela inadimplente. Assim que o carn\xea \xe9 criado, ele tamb\xe9m recebe este status up_to_date)\n                "previous": null\n            },\n            "type": "carnet" // tipo da cobran\xe7a que sofreu a altera\xe7\xe3o (neste caso, "carnet" quer dizer que a altera\xe7\xe3o ocorreu em um carn\xea)\n        },\n        {\n            "created_at": "2022-03-22 09:38:36", // data da altera\xe7\xe3o do status do array "id 1"\n            "custom_id": null,\n            "id": 2,\n            "identifiers": {\n                "carnet_id": 2512240, // identificador do carn\xea\n                "charge_id": 27757742 // identificador da parcela\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge" // altera\xe7\xe3o ocorreu em uma parcela de carn\xea\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 3,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757742\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 4,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757743\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 5,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757744\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 6,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757745\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 7,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757746\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 8,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757747\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 9,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757748\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 10,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757749\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 11,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757750\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 12,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757751\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 13,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757752\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 14,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757753\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 15,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757743\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 16,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757744\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 17,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757745\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 18,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757746\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 19,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757747\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 20,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757748\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 21,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757749\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 22,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757750\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 23,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757751\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 24,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757752\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-03-22 09:38:36",\n            "custom_id": null,\n            "id": 25,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757753\n            },\n            "status": {\n                "current": "waiting",\n                "previous": "new"\n            },\n            "type": "carnet_charge"\n        },\n        {\n            "created_at": "2022-04-03 07:34:22",\n            "custom_id": null,\n            "id": 26,\n            "identifiers": {\n                "carnet_id": 2512240,\n                "charge_id": 27757742\n            },\n            "received_by_bank_at": "2022-04-02", // data do pagamento da cobran\xe7a\n            "status": {\n                "current": "paid", // status ATUAL da transa\xe7\xe3o: paid ("pago")\n                "previous": "waiting" // status ANTERIOR da transa\xe7\xe3o: waiting ("aguardando")\n            },\n            "type": "carnet_charge",\n            "value": 6250 // valor que acompanha a altera\xe7\xe3o. Esta tag existir\xe1 quando a altera\xe7\xe3o for uma confirma\xe7\xe3o de pagamento, informando o valor pago que foi confirmado\n        }\n    ]\n}\n\n\n// neste exemplo, um novo status do carn\xea poderia ser aplicado e, neste caso, seria incrementada mais uma posi\xe7\xe3o no array. Por exemplo: o carn\xea pode ter o status alterado para "unpaid" se identificarmos a inadimpl\xeancia de pelo menos uma parcela, assim, voc\xea receber\xe1 a notifica\xe7\xe3o com uma nova posi\xe7\xe3o do array com "type": "carnet", indicando que tal status refere-se ao carn\xea, e n\xe3o a alguma parcela do carn\xea.\n\n// Todas as transa\xe7\xf5es possuem status, que representa a situa\xe7\xe3o dessa transa\xe7\xe3o. Confira a rela\xe7\xe3o completa para tratativas em seu sistema: https://dev.gerencianet.com.br/docs/VisaoGeral/statusTransacoes\n'))),Object(r.b)(c.a,{value:"link",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n    "data": [\n        {\n            "created_at": "2022-02-20 09:12:23", // data da altera\xe7\xe3o do status do array "id 1"\n            "custom_id": null,\n            "id": 1, // indicador de ordem, iniciado em 1. \xc9 incrementado para cada mudan\xe7a de um token de notifica\xe7\xe3o. Isso \xe9 \xfatil se voc\xea precisar manter o controle sobre qual altera\xe7\xe3o voc\xea j\xe1 processou\n            "identifiers": { // identificadores que representam a cobran\xe7a\n                "charge_id": 24342333\n            },\n            "status": {\n                "current": "new",\n                "previous": null\n            },\n            "type": "charge" // tipo da cobran\xe7a que sofreu a altera\xe7\xe3o (neste caso, "charge" quer dizer que a altera\xe7\xe3o ocorreu em uma transa\xe7\xe3o)\n        },\n        {\n            "created_at": "2022-02-20 09:12:23", // data da altera\xe7\xe3o do status do array "id 2"\n            "custom_id": null, // identificador da cobran\xe7a definido pelo integrador, se existir\n            "id": 2,\n            "identifiers": { // identificadores que representam a cobran\xe7a\n                "charge_id": 24342333\n            },\n            "status": {\n                "current": "link",\n                "previous": "new"\n            },\n            "type": "charge" // tipo da cobran\xe7a que sofreu a altera\xe7\xe3o (neste caso, "charge" quer dizer que a altera\xe7\xe3o ocorreu em uma transa\xe7\xe3o)\n        },\n        {\n            "created_at": "2022-04-03 07:33:30", // data da altera\xe7\xe3o do status do array "id 3"\n            "custom_id": null, // identificador da cobran\xe7a definido pelo integrador, se existir\n            "id": 3,\n            "identifiers": { // identificadores que representam a cobran\xe7a\n                "charge_id": 24342333\n            },\n            "received_by_bank_at": "2022-04-02", // data do pagamento da cobran\xe7a\n            "status": {\n                "current": "paid", // status ATUAL da transa\xe7\xe3o: paid ("pago")\n                "previous": "link" // status ANTERIOR da transa\xe7\xe3o: link ("link de pagamento")\n            },\n            "type": "charge", // tipo da cobran\xe7a que sofreu a altera\xe7\xe3o (neste caso, "charge" quer dizer que a altera\xe7\xe3o ocorreu em uma transa\xe7\xe3o)\n            "value": 6990 // valor que acompanha a altera\xe7\xe3o. Esta tag existir\xe1 quando a altera\xe7\xe3o for uma confirma\xe7\xe3o de pagamento, informando o valor pago que foi confirmado\n        }\n    ]\n}\n\n\n// Todas as transa\xe7\xf5es possuem status, que representa a situa\xe7\xe3o dessa transa\xe7\xe3o. Confira a rela\xe7\xe3o completa para tratativas em seu sistema: https://dev.gerencianet.com.br/docs/VisaoGeral/statusTransacoes\n')))),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"List of all possible transaction, carnets and subscriptions statuses")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},'All transactions, booklets and signatures have status, which represents their "situations". Therefore, it is important to know the possible statuses in the API to provide the proper handling in your system.'),Object(r.b)("p",{parentName:"div"},"Check ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../VisaoGeral/statusTransacoes"}),"this link")," for all the details of the possible statuses."))),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Order of notifications (callbacks)")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In short, the order of notifications is always the order of events."),Object(r.b)("p",{parentName:"div"},"For example: in the case of carnets, considering that installment 1 had its payment confirmed, then installment 2 and, finally, installment 3. In this situation, we will have an ",Object(r.b)("em",{parentName:"p"},"array")," of 3 positions where the first shows the installment confirmation 1, the second the confirmation of installment 2 and, the last one, the confirmation of installment 3."),Object(r.b)("p",{parentName:"div"},"To find out about the most recent situation of the parcel, you can scan the ",Object(r.b)("em",{parentName:"p"},"array"),' and know (store) until which "event" was synchronized, as it may be that a notification brings 2 or 3 updates, for example, so you can\'t consider that the last position of the ',Object(r.b)("em",{parentName:"p"},"array")," is always the one that needs to be synchronized."))),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("h3",{id:"22-explanation-of-response-parameters"},"2.2. Explanation of response parameters:"),Object(r.b)("p",null,"The response to a notification will always be an ",Object(r.b)("em",{parentName:"p"},"array")," containing the changes that have occurred in a common transaction, subscription, carnets, subscription transaction or carnets transaction in the last 6 months."),Object(r.b)("p",null,"Note that notifications related to subscription and booklet may also be accompanied by changes in your transactions (or installments)."),Object(r.b)("br",null),Object(r.b)("h3",{id:"23-response-tags"},"2.3. Response tags:"),Object(r.b)("table",null,Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("th",null,"Tag"),Object(r.b)("th",{align:"center"},"Description")),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("code",null,"id")),Object(r.b)("td",{align:"left"},"Order indicator, started on ",Object(r.b)("code",null,"1"),". It is incremented for each change of a notification token. This is useful if you need to keep track of which change you have already processed.")),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("code",null,"type")),Object(r.b)("td",{align:"left"},"Determines the type of charge that was changed. ",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("em",null,"Possible types are:"),Object(r.b)("br",null),Object(r.b)("code",null,"charge")," // The change occurred in a transaction.",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"subscription")," // The change occurred in a subscription. ",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"carnet")," // The change took place in a carnet.",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"subscription_charge"),"// The change occurred in a subscription installment.",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"carnet_charge")," // The change occurred in a parcel of the carnet")),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("code",null,"custom_id")),Object(r.b)("td",{align:"left"},"Informs the charge identifier defined by the integrator, if any.")),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("code",null,"status")),Object(r.b)("td",{align:"left"},"Defines the current and previous status of the transaction, subscription or carnet.",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("em",null,"Status attributes:"),Object(r.b)("br",null),Object(r.b)("code",null,"current")," ",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"previous")," ",Object(r.b)("br",null),Object(r.b)("br",null)," Note: if there is no previous state (that is, for new charges), the previous value will be ",Object(r.b)("code",null,"null"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("code",null,"identifiers")),Object(r.b)("td",{align:"left"},"Identifiers representing the charge. The attributes of this tag may vary depending on the type of change (parameter ",Object(r.b)("code",null,"type"),"). ",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("em",null,"Identifiers that can be returned:"),Object(r.b)("br",null),Object(r.b)("code",null,"charge_id")," // Returned when ",Object(r.b)("code",null,'type = "charge"')," ",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"subscription_id")," // Returned when ",Object(r.b)("code",null,'type = "subscription"'),". ",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"carnet_id")," // returned when ",Object(r.b)("code",null,'type = "subscription"'),".",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"charge_id")," and ",Object(r.b)("code",null,"subscription_id")," //  returned when ",Object(r.b)("br",null),Object(r.b)("code",null,'type = "subscription_charge"'),".",Object(r.b)("br",null),Object(r.b)("br",null)," ",Object(r.b)("code",null,"charge_id")," e ",Object(r.b)("code",null,"carnet_id")," // returned when ",Object(r.b)("code",null,'type = "carnet_charge"'),".")),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("code",null,"value")),Object(r.b)("td",{align:"left"},"Value accompanying the change. This tag will exist when the change is a payment confirmation, informing the amount paid that was confirmed.")))),"**Fields with * represent mandatory values**",Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h2",{id:"3-notification-queue-status-callback"},"3. Notification queue status (callback)"),Object(r.b)("p",null,"Gerencianet notifies the integrated systems of each change in the status of a given charge through its associated notification URL."),Object(r.b)("p",null,"Notifications are processed and always sent through a submission queue. It is also worth remembering that, if the callback is rejected by the destination system, it automatically returns to the queue and is rescheduled for a new delivery attempt. Callbacks are dynamic and can occur throughout the day."),Object(r.b)("p",null,"Thinking about offering new ways of consulting the processing of this queue, Gestoret provides a screen that allows consulting the consumption status of the notifications queue (callbacks) processed until then. In this way, if the customer is in doubt as to whether a callback has already been sent or not, he can follow the daily processing of this queue."),Object(r.b)("p",null,"To see the status and processing of the queue, see the link ",Object(r.b)("a",{href:"https://gerencianet.com.br/confirmacoes/",target:"_blank",title:"Link Externo"},"status of payment confirmations - Gerencianet"),"."),Object(r.b)("h2",{id:"4-videos-notifications"},"4. Videos: Notifications"),Object(r.b)("p",null,"Thinking about offering new means of transmitting information, Gerencianet makes the following videos available in order to explain, in a clear and objective way, how to implement and configure your notification URL to receive ",Object(r.b)("em",{parentName:"p"},"callbacks"),"."),Object(r.b)("br",null),Object(r.b)("h3",{id:"41-implementing-notifications---callback-or-auto-return-via-playground"},"4.1. Implementing Notifications - Callback or Auto Return (via Playground)"),Object(r.b)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/ENuawROOfE4",frameborder:"0",allowfullscreen:!0}),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("h3",{id:"42-configuring-your-notifications-url-integration-gerencianet-api"},"4.2. Configuring your notifications URL (Integration Gerencianet API)"),Object(r.b)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/-_yhi1FUhvg",frameborder:"0",allowfullscreen:!0}),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("h2",{id:"5-ip-addresses-of-gerencianet-for-delivery-of-callbacks"},"5. IP addresses of Gerencianet for delivery of callbacks"),Object(r.b)("p",null,"Some applications and services may filter our communications through our IP addresses. Therefore, we recommend checking through the list of addresses used by the Gerencianet. ",Object(r.b)("a",{href:"https://gerencianet.com.br/artigo/quais-enderecos-de-ip-gerencianet-utiliza/",target:"_blank",title:"Link Externo"},"Check it out in full in our FAQ"),"."),Object(r.b)("br",null),Object(r.b)("h2",{id:"6-complementary-information-status-of-transactions-carnets-and-subscriptions"},"6. Complementary Information: status of transactions, carnets and subscriptions"),Object(r.b)("p",null,"check out ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../VisaoGeral/statusTransacoes"}),"this link")," the table containing the possible status of a transaction, carnets and subscriptions in Gerencianet API."),Object(r.b)("br",null),Object(r.b)("h2",{id:"7-next-steps"},"7. Next steps"),Object(r.b)("p",null,"Now that you've implemented the Notification URL feature, you can check out more details ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../Notificacoes/FluxoNotificacoes"}),"this link")," on how to interpret scenarios pertaining to notifications (callbacks), such as in situations where a charge on your system has not been downloaded, the callback has been triggered to a URL you previously defined but which is no longer valid, etc.")))}p.isMDXComponent=!0},250:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return h}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),u=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=u(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},p=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(t),p=a,h=d["".concat(o,".").concat(p)]||d[p]||b[p]||r;return t?i.a.createElement(h,c(c({ref:n},l),{},{components:t})):i.a.createElement(h,c({ref:n},l))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=t[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},254:function(e,n,t){"use strict";function a(e){var n,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(i&&(i+=" "),i+=t);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}n.a=function(){for(var e,n,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(i&&(i+=" "),i+=n);return i}},255:function(e,n,t){"use strict";var a=t(0);const i=Object(a.createContext)({tabGroupChoices:{},setTabGroupChoices:()=>{},isAnnouncementBarClosed:!1,closeAnnouncementBar:()=>{}});n.a=i},256:function(e,n,t){"use strict";var a=t(0),i=t(255);n.a=function(){return Object(a.useContext)(i.a)}},257:function(e,n,t){"use strict";var a=t(0),i=t.n(a),r=t(256),o=t(254),c=t(92),s=t.n(c);const l=37,u=39;n.a=function(e){const{block:n,children:t,defaultValue:c,values:d,groupId:b}=e,{tabGroupChoices:p,setTabGroupChoices:h}=Object(r.a)(),[m,f]=Object(a.useState)(c);if(null!=b){const e=p[b];null!=e&&e!==m&&d.some(n=>n.value===e)&&f(e)}const g=e=>{f(e),null!=b&&h(b,e)},O=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n})},d.map(({value:e,label:n})=>i.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":m===e,className:Object(o.a)("tabs__item",s.a.tabItem,{"tabs__item--active":m===e}),key:e,ref:e=>O.push(e),onKeyDown:e=>((e,n,t)=>{switch(t.keyCode){case u:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case l:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(O,e.target,e),onFocus:()=>g(e),onClick:()=>g(e)},n))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter(e=>e.props.value===m)[0]))}},258:function(e,n,t){"use strict";var a=t(0),i=t.n(a);n.a=function(e){return i.a.createElement("div",null,e.children)}}}]);