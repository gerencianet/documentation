(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{194:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return d})),t.d(n,"Highlight",(function(){return b})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return m}));var a=t(2),i=t(6),r=(t(0),t(250)),o=t(252),s=t(257),l=t(258),c={id:"PlaygroundAssinaturas",title:"Playground Assinaturas",hide_title:!0,sidebar_label:"Playground Subscription"},d={id:"AmbienteTestes/PlaygroundAssinaturas",isDocsHomePage:!1,title:"Playground Assinaturas",description:"Playground: Subscription",source:"@site/docs\\AmbienteTestes\\PlaygroundAssinatura.md",permalink:"/documentation/docs/AmbienteTestes/PlaygroundAssinaturas",sidebar_label:"Playground Subscription",sidebar:"someSidebar",previous:{title:"Playground Notifica\xe7\xf5es",permalink:"/documentation/docs/AmbienteTestes/PlaygroundNotification"},next:{title:"Playground Outros",permalink:"/documentation/docs/AmbienteTestes/PlaygroundOutros"}},b=function(e){var n=e.children,t=e.color;return Object(r.b)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},n)},p=[{value:'<Highlight color="#009615">POST</Highlight> /v1/plan',id:"post-v1plan",children:[]},{value:'<Highlight color="#00BBCE">GET</Highlight> /v1/plans',id:"get-v1plans",children:[]},{value:'<Highlight color="#fcaf17">PUT</Highlight> /v1/plan/:id',id:"put-v1planid",children:[]},{value:"<br/>",id:"br",children:[{value:'<Highlight color="#b50000">DELETE</Highlight> /v1/plan/:id',id:"delete-v1planid",children:[]},{value:'<Highlight color="#009615">POST</Highlight> /v1/plan/:id/subscription',id:"post-v1planidsubscription",children:[]},{value:'<Highlight color="#00BBCE">GET</Highlight> /v1/subscription/:id',id:"get-v1subscriptionid",children:[]},{value:'<Highlight color="#fcaf17">PUT</Highlight> /v1/subscription/:id/cancel',id:"put-v1subscriptionidcancel",children:[]},{value:'<Highlight color="#fcaf17">PUT</Highlight> /v1/subscription/:id/metadata',id:"put-v1subscriptionidmetadata",children:[]},{value:'<Highlight color="#009615">POST</Highlight> /v1/subscription/:id/pay',id:"post-v1subscriptionidpay",children:[]},{value:'<Highlight color="#009615">POST</Highlight> /v1/subscription/:id/history',id:"post-v1subscriptionidhistory",children:[]}]}],u={Highlight:b,rightToc:p};function m(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{className:"titulo"},"Playground: Subscription"),Object(r.b)("div",{className:"subtitulo"},Object(r.b)("p",null,"To access the test environment you need a Gerencianet account. ",Object(r.b)("a",{href:"https://gerencianet.com.br/#abrirconta",title:"Cadastro ao nosso sistema, seja nosso cliente",target:"_blank"},"Create account"),"."),Object(r.b)("p",null,'The Playground (also called as "sandbox") it is a development/test environment in which the integrator, regardless of the operation to be performed, can use to learn about the payment mechanism and flow in a 100% test and uncomplicated environment. Know more about the Gerencianet\'s playground.'),Object(r.b)("p",null,"A subscription is a set of transactions generated, which can be charged by bank slip or credit card. For more details on subscriptions, check out the specific section."),Object(r.b)("p",null,"To create a signature, it is quite simple and requires only three steps: "),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"First, create the subscription plan through the ",Object(r.b)("inlineCode",{parentName:"li"},"POST /v1/plan")," endpoint;"),Object(r.b)("li",{parentName:"ol"},"Now create subscriptions to link to the plan using the ",Object(r.b)("inlineCode",{parentName:"li"},"POST /v1/plan/:id/subscription")," endpoint;"),Object(r.b)("li",{parentName:"ol"},"Finally, define the payment method for the subscription through the endpoint",Object(r.b)("inlineCode",{parentName:"li"},"POST /v1/subscription/:id/pay"),".")),Object(r.b)("p",null,'Now, check out all the endpoints present in our Playground, in the "Subscriptions" modality: '),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#post-v1plan"},"/v1/plan")," (creates a subscription plan)    "),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#00BBCE",mdxType:"Highlight"},"GET"),"  ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#get-v1plans"},"/v1/plans"),"(returns a plan's information)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#fcaf17",mdxType:"Highlight"},"PUT")," ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#put-v1planid"},"/v1/plan/:id")," (allow editing the subscription plan name )"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#b50000",mdxType:"Highlight"},"DELETE"),"  ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#delete-v1planid"},"/v1/plan/:id ")," (cancel a subscription plan )"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#post-v1planidsubscription"},"/v1/plan/:id/subscription"),"(create subscriptions to link to plans)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#00BBCE",mdxType:"Highlight"},"GET"),"  ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#get-v1subscriptionid"},"/v1/subscription/:id")," (returns information about a subscription linked to a plan )"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#fcaf17",mdxType:"Highlight"},"PUT")," ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#put-v1subscriptionidcancel"},"/v1/subscription/:id/cancel")," (cancel active subscriptions in a subscription plan)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#fcaf17",mdxType:"Highlight"},"PUT")," ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#put-v1subscriptionidmetadata"},"/v1/subscription/:id/metadata"),' (includes the "notification_url" and "custom_id" in a existent subscirption)'),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST"),"  ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#post-v1subscriptionidpay"},"/v1/subscription/:id/pay")," (associates payment method to a subscription already created )"),Object(r.b)("li",{parentName:"ul"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," ",Object(r.b)("a",{href:"../AmbienteTestes/PlaygroundAssinaturas#post-v1subscriptionidhistory"},"/v1/subscription/:id/history"),"(add description to subscription history )")),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"post-v1plan"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," /v1/plan"),Object(r.b)("p",null,"Creates the subscription plan, being defined by the integrator the name of the plan, interval (in months) in which the subscription will be generated and the amount of repetitions that the charge will be generated."),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"POST /v1/plan")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/post_plan.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/post_plan.png")})),Object(r.b)("p",null,' seguir, um JSON simples que cria plano de assinatura no Playground. Nele, est\xe1 sendo definido que a assinatura \xe9 chamada "',Object(r.b)("em",{parentName:"p"},"Plano de Internet - Velocidade 10 Mb"),'", a cobran\xe7a \xe9 "',Object(r.b)("em",{parentName:"p"},"mensal"),'" e ser\xe3o geradas "',Object(r.b)("em",{parentName:"p"},"12 cobran\xe7as"),'" (ou at\xe9 que o plano seja cancelado).'),Object(r.b)("p",null,"Also, you can see the predicted output and validation schema with all tags (required and optional) available for this method: "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"},{label:"Schema",value:"schema"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "name": "Plano de Internet - Velocidade 10 Mb",\n  "interval": 1,\n  "repeats": 12\n}\n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": {\n    "plan_id": numero_plan_id, // n\xfamero da ID referente ao plano de assinatura criado\n    "name": "Plano de Internet - Velocidade 10 Mb", // nome do plano de assinatura\n    "interval": 12, // intervalo que as cobran\xe7as devem ser geradas, em meses\n    "repeats": null, // n\xfamero de vezes que a cobran\xe7a deve ser gerada - neste caso, indefinidamente\n    "created_at": "2016-06-28 15:48:32" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n  }\n}\n'))),Object(r.b)(l.a,{value:"schema",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "/Plan",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string",\n      "minLength": 1,\n      "maxLength": 255\n    },\n    "interval": {\n      "type": "integer",\n      "minimum": 1,\n      "exclusiveMinimum": false,\n      "maximum": 24,\n      "exclusiveMaximum": false\n    },\n    "repeats": {\n      "type": [\n        "integer",\n        "null"\n      ],\n      "minimum": 2,\n      "maximum": 120,\n      "exclusiveMinimum": false,\n      "exclusiveMaximum": false\n    }\n  },\n  "required": [\n    "name",\n    "interval"\n  ]\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"get-v1plans"},Object(r.b)(b,{color:"#00BBCE",mdxType:"Highlight"},"GET")," /v1/plans"),Object(r.b)("p",null,"Search for information related to a subscription. There are advanced filters that can be used to find, such as: "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Name"),": returns results from the search for the name of the previously registered plan ;"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Limit"),": maximum limit of response records;"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Offset"),": determines from which record the search will be performed.")),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"GET /v1/plans")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/get-plans.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/get-plans.png")})),Object(r.b)("p",null,"The following is a simple JSON that can be used to search for information related to a previously created subscription in Playground. This JSON returns information related to a subscription, being able to use any of the three input parameters ",Object(r.b)("inlineCode",{parentName:"p"},"name"),", ",Object(r.b)("inlineCode",{parentName:"p"},"limit")," and ",Object(r.b)("inlineCode",{parentName:"p"},"offset")," to search it - if nothing is informed, it will return all the subscriptions created in Playground."),Object(r.b)("p",null,"Also, you can look at the predicted output available for this method. Remembering that it is also necessary to inform the input parameters ",Object(r.b)("inlineCode",{parentName:"p"},"name"),", ",Object(r.b)("inlineCode",{parentName:"p"},"limit")," and ",Object(r.b)("inlineCode",{parentName:"p"},"offset")," of the subscription. "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'  Input parameter: inform the "name", "limit" and "offset" of the subscription\n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": [\n    {\n      "plan_id": numero_plan_id, // n\xfamero da ID referente ao plano de assinatura criado\n      "name": "Plano de Internet - Velocidade 1 Mb", // nome do plano de assinatura\n      "interval": 1, // intervalo que as cobran\xe7as devem ser geradas, em meses\n      "repeats": null, // n\xfamero de vezes que a cobran\xe7a deve ser gerada - neste caso, indefinidamente\n      "created_at": "2016-05-02" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n    },\n    {\n      "plan_id": numero_plan_id, // n\xfamero da ID referente ao plano de assinatura criado\n      "name": "Plano de Internet - Velocidade 10 Mb", // nome do plano de assinatura\n      "interval": 12, // intervalo que as cobran\xe7as devem ser geradas, em meses\n      "repeats": null, // n\xfamero de vezes que a cobran\xe7a deve ser gerada - neste caso, indefinidamente\n      "created_at": "2016-06-28" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n    },\n    {\n      "plan_id": numero_plan_id, // n\xfamero da ID referente ao plano de assinatura criado\n      "name": "Plano de Internet - Velocidade 20 Mb", // nome do plano de assinatura\n      "interval": 10, // intervalo que as cobran\xe7as devem ser geradas, em meses\n      "repeats": null, // n\xfamero de vezes que a cobran\xe7a deve ser gerada - neste caso, indefinidamente\n      "created_at": "2016-06-29" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n    },\n    {\n      "plan_id": numero_plan_id, // n\xfamero da ID referente ao plano de assinatura criado\n      "name": "Plano de Internet - Velocidade 30 Mb", // nome do plano de assinatura\n      "interval": 12, // intervalo que as cobran\xe7as devem ser geradas, em meses\n      "repeats": null, // n\xfamero de vezes que a cobran\xe7a deve ser gerada - neste caso, indefinidamente\n      "created_at": "2016-06-29" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n    }\n  ]\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"put-v1planid"},Object(r.b)(b,{color:"#fcaf17",mdxType:"Highlight"},"PUT")," /v1/plan/:id"),Object(r.b)("p",null,"Allows you to change (edit) the name of a pre-existing subscription plan. To do so, the identifier ",Object(r.b)("inlineCode",{parentName:"p"},"plan_id")," of the plan must be provided."),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"PUT /v1/plan/:id")," method that are available for use:"),Object(r.b)("a",{href:Object(o.a)("img/put-plan-id.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/put-plan-id.png")})),Object(r.b)("p",null,'The following is a simple JSON that can be used to edit the name of an existing subscription plan. In this case, this JSON will update the existing subscription plan name to "',Object(r.b)("inlineCode",{parentName:"p"},"Meu novo nome do plano"),'".'),Object(r.b)("p",null,"Also, you can see the predicted output and validation schema with all tags (required and optional) available for this method. Remembering that it is necessary to inform the identifier of the subscription plan, which in this case is the ",Object(r.b)("inlineCode",{parentName:"p"},"plan_id"),": "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"},{label:"Schema",value:"schema"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "name": "Meu novo nome do plano"\n}\n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200 // retorno HTTP "200" informando que o pedido foi bem sucedido\n}\n'))),Object(r.b)(l.a,{value:"schema",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "/UpdatePlan",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string",\n      "minLength": 1,\n      "maxLength": 255\n    }\n  },\n  "required": [\n    "name"\n  ]\n}\n')))),Object(r.b)("h2",{id:"br"},Object(r.b)("br",null)),Object(r.b)("h3",{id:"delete-v1planid"},Object(r.b)(b,{color:"#b50000",mdxType:"Highlight"},"DELETE")," /v1/plan/:id"),Object(r.b)("p",null,"Allows you to cancel a subscription plan. To do so, you must inform the ",Object(r.b)("inlineCode",{parentName:"p"},"plan_id"),". "),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"DELETE /v1/plan/:id")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/delete-plan-id.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/delete-plan-id.png")})),Object(r.b)("p",null,"The following is a simple JSON that can be used to cancel a subscription plan."),Object(r.b)("p",null,"Also, you can look at the predicted output available for this method. It should be noted that it is necessary to inform the ",Object(r.b)("inlineCode",{parentName:"p"},"plan_id")," input parameter of the subscription plan:"),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'  Input parameter: enter the "plan_id" of the subscription plan \n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200 // retorno HTTP "200" informando que o pedido foi bem sucedido\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"post-v1planidsubscription"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," /v1/plan/:id/subscription"),Object(r.b)("p",null,"Creates a subscription when you need to charge your customers recurrently. In this way, subsequent costs will be created automatically based on the plan configuration. To do so, you must inform the ",Object(r.b)("code",null,"plan_id")," of the previously created plan that you want to associate with a subscription."),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("code",null,"POST /v1/plan/:id/subscription")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/post-plan-id-subscription.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/post-plan-id-subscription.png")})),Object(r.b)("p",null,"The following is a simple JSON that allows you to create subscriptions and associate them with plans to recurrently bill. This JSON associates the subscription entitled ",Object(r.b)("em",{parentName:"p"},'"Internet - Monthly"')," with the subscription plan plan (",Object(r.b)("code",null,"plan_id"),") informed in the input parameter, value of ",Object(r.b)("em",{parentName:"p"},"R$ 69.90")," and amount equal to ",Object(r.b)("em",{parentName:"p"},"1 "),"."),Object(r.b)("p",null,"Also, you can see the predicted output and validation schema with all tags (required and optional) available for this method. Remembering that you must inform the ",Object(r.b)("code",null,"plan_id")," of the plan you want to associate with a subscription: "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"},{label:"Schema",value:"schema"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "items": [\n    {\n      "name": "Internet - Mensalidade",\n      "value": 6990,\n      "amount": 1\n    }\n  ]\n}\n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": {\n    "subscription_id": numero_subscription_id, // n\xfamero ID referente \xe0 inscri\xe7\xe3o gerada\n    "status": "new", // cobran\xe7a gerada, aguardando defini\xe7\xe3o da forma de pagamento\n    "custom_id": null, // identificador pr\xf3prio opcional\n    "charges": [\n      {\n        "charge_id": numero_charge_id, // n\xfamero da ID referente \xe0 transa\xe7\xe3o gerada\n        "status": "new", // cobran\xe7a gerada, aguardando defini\xe7\xe3o da forma de pagamento\n        "total": 6990, // valor total da transa\xe7\xe3o (em centavos, sendo 6990 = R$69,90)\n        "parcel": 1 // n\xfamero de parcelas\n      }\n    ],\n    "created_at": "2016-06-29 10:42:59" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n  }\n}\n'))),Object(r.b)(l.a,{value:"schema",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "/Subscription",\n  "type": "object",\n  "properties": {\n    "items": {\n      "id": "/Item",\n      "type": "array",\n      "minItems": 1,\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 255,\n            "pattern": "^[^<>]+$"\n          },\n          "value": {\n            "type": "integer",\n            "minimum": 0\n          },\n          "amount": {\n            "type": "integer",\n            "minimum": 1,\n            "exclusiveMinimum": false\n          }\n        },\n        "required": [\n          "name",\n          "value"\n        ]\n      }\n    },\n    "shippings": {\n      "id": "/Shipping",\n      "type": "array",\n      "minItems": 1,\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "maxLength": 255\n          },\n          "value": {\n            "type": "integer",\n            "minimum": 0\n          },\n          "payee_code": {\n            "type": "string",\n            "pattern": "^[a-fA-F0-9]{32}$"\n          }\n        },\n        "required": [\n          "name",\n          "value"\n        ]\n      }\n    },\n    "metadata": {\n      "type": "object",\n      "properties": {\n        "custom_id": {\n          "type": [\n            "string",\n            "null"\n          ]\n        },\n        "notification_url": {\n          "type": [\n            "string",\n            "null"\n          ],\n          "pattern": "^https?://.+"\n        }\n      }\n    }\n  },\n  "required": [\n    "items"\n  ]\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"get-v1subscriptionid"},Object(r.b)(b,{color:"#00BBCE",mdxType:"Highlight"},"GET")," /v1/subscription/:id"),Object(r.b)("p",null,"Allows you to search for information about a subscription that is linked to a plan."),Object(r.b)("p",null,"In the following image, it is possible to observe the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"GET /v1/subscription/:id")," method that are available for use "),Object(r.b)("a",{href:Object(o.a)("img/get-subscription-id.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/get-subscription-id.png")})),Object(r.b)("p",null,"The following is a simple JSON that can be used to fetch information related to subscribing to a subscription linked to a plan created in the Playground. In this case, information about a subscription that is linked to a plan will be returned, according to the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," informed in the input parameter."),Object(r.b)("p",null,"Also, you can look at the predicted output available for this method. Remembering that you also need to inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," input parameter of the desired subscription: "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'  Input parameter: inform the "subscription_id" of the transaction \n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": {\n    "subscription_id": numero_subscription_id, // n\xfamero ID referente \xe0 inscri\xe7\xe3o gerada\n    "value": 6990, // valor da inscri\xe7\xe3o (6990 equivale a R$69,90)\n    "status": "new", // cobran\xe7a gerada, aguardando defini\xe7\xe3o da forma de pagamento\n    "custom_id": null, // identificador pr\xf3prio opcional\n    "notification_url": null, // endere\xe7o da sua URL que receber\xe1 as notifica\xe7\xf5es de mudan\xe7as de status das transa\xe7\xf5es\n    "payment_method": null, // m\xe9todo de pagamento (null = ainda n\xe3o foi definido), (banking_billet = boleto banc\xe1rio) ou (credit_card = cart\xe3o de cr\xe9dito)\n    "next_execution": null, // data da pr\xf3xima execu\xe7\xe3o\n    "next_expire_at": null, // data do pr\xf3ximo vencimento no formato 2016-12-30\n    "plan": {\n      "plan_id": numero_plan_id, // n\xfamero ID referente ao plano de assinatura criado\n      "name": "Plano de Internet - Velocidade 10 Mb", // nome do plano de assinatura\n      "interval": 12, // intervalo que as cobran\xe7as devem ser geradas, em meses\n      "repeats": null // n\xfamero de vezes que a cobran\xe7a deve ser gerada - neste caso, indefinidamente\n    },\n    "occurrences": 0,\n    "created_at": "2016-06-29 10:42:59", // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n    "history": [\n      {\n        "charge_id": numero_charge_id, // n\xfamero da ID referente \xe0 transa\xe7\xe3o gerada\n        "status": "new", // cobran\xe7a gerada, aguardando defini\xe7\xe3o da forma de pagamento\n        "created_at": "2016-06-29 10:42:59" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n      }\n    ]\n  }\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"put-v1subscriptionidcancel"},Object(r.b)(b,{color:"#fcaf17",mdxType:"Highlight"},"PUT")," /v1/subscription/:id/cancel"),Object(r.b)("p",null,"Allows you to cancel active subscriptions on a subscription plan. To do so, you must inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," of the subscription you wish to cancel."),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"PUT /v1/subscription/:id/cancel")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/put-subscription-id-cancel.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/put-subscription-id-cancel.png")})),Object(r.b)("p",null,"The following is a simple JSON that allows you to unsubscribe from active subscriptions to a subscription plan created in Playground."),Object(r.b)("p",null,"Also, you can look at the predicted output available for this method. Remembering that you also need to inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," input parameter of the desired subscription: "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'  Input parameter: inform the "subscription_id" of the transaction \n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200 // retorno HTTP "200" informando que o pedido foi bem sucedido\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"put-v1subscriptionidmetadata"},Object(r.b)(b,{color:"#fcaf17",mdxType:"Highlight"},"PUT")," /v1/subscription/:id/metadata"),Object(r.b)("p",null,"Changes the information sent in the ",Object(r.b)("code",null,"metadata")," property of a subscription at any time. This endpoint is ",Object(r.b)("strong",{parentName:"p"},"extremely important")," for updating your subscription's notification URL or modifying the custom_id previously associated with the subscription."),Object(r.b)("p",null,"In this case, all transactions linked to the subscription will be updated. "),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Use cases for this endpoint:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Integrator changed the server IP that was associated in the subscription/transactions notification URL; ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Integrator has updated the notification URL for new subscriptions/transactions that are created, but needs to update also on previous subscriptions/transactions that were generated and that are associated with the incorrect/outdated URL;")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'SSL (https) has been installed on the client\'s server and even if the client defines a 301 or 302 redirect rule, it will be necessary to define the new URL in the subscriptions/transactions that have the "old" URL; ')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Integrator generated charges and had not informed the notification URL when sending the subscription/transaction creation request; ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Modify or add information next to the custom_id attribute associated with previously generated signatures/transactions; ")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"And others possible scenarios."))),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("code",null,"PUT /v1/subscription/:id/metadata")," method that are available for use:"),Object(r.b)("a",{href:Object(o.a)("img/put-subscription-metadata.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/put-subscription-metadata.png")})),Object(r.b)("p",null,"The following is a simple JSON that can be used to change the notification URL and custom_id of an existing transaction in the Playground."),Object(r.b)("p",null,"Also, you can see the predicted output and validation schema with all tags (required and optional) available for this method. Remembering that you also need to inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," input parameter of the desired subscription:"),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"},{label:"Schema",value:"schema"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "items": [\n    {\n      "name": "Internet - Mensalidade",\n      "value": 6990,\n      "amount": 1\n    }\n  ]\n}\n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": {\n    "subscription_id": numero_subscription_id, // n\xfamero ID referente \xe0 inscri\xe7\xe3o gerada\n    "status": "new", // cobran\xe7a gerada, aguardando defini\xe7\xe3o da forma de pagamento\n    "custom_id": null, // identificador pr\xf3prio opcional\n    "charges": [\n      {\n        "charge_id": numero_charge_id, // n\xfamero da ID referente \xe0 transa\xe7\xe3o gerada\n        "status": "new", // cobran\xe7a gerada, aguardando defini\xe7\xe3o da forma de pagamento\n        "total": 6990, // valor total da transa\xe7\xe3o (em centavos, sendo 6990 = R$69,90)\n        "parcel": 1 // n\xfamero de parcelas\n      }\n    ],\n    "created_at": "2016-06-29 10:42:59" // data e hora da cria\xe7\xe3o da transa\xe7\xe3o\n  }\n}\n'))),Object(r.b)(l.a,{value:"schema",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "/Subscription",\n  "type": "object",\n  "properties": {\n    "items": {\n      "id": "/Item",\n      "type": "array",\n      "minItems": 1,\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 255,\n            "pattern": "^[^<>]+$"\n          },\n          "value": {\n            "type": "integer",\n            "minimum": 0\n          },\n          "amount": {\n            "type": "integer",\n            "minimum": 1,\n            "exclusiveMinimum": false\n          }\n        },\n        "required": [\n          "name",\n          "value"\n        ]\n      }\n    },\n    "shippings": {\n      "id": "/Shipping",\n      "type": "array",\n      "minItems": 1,\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "type": "string",\n            "maxLength": 255\n          },\n          "value": {\n            "type": "integer",\n            "minimum": 0\n          },\n          "payee_code": {\n            "type": "string",\n            "pattern": "^[a-fA-F0-9]{32}$"\n          }\n        },\n        "required": [\n          "name",\n          "value"\n        ]\n      }\n    },\n    "metadata": {\n      "type": "object",\n      "properties": {\n        "custom_id": {\n          "type": [\n            "string",\n            "null"\n          ]\n        },\n        "notification_url": {\n          "type": [\n            "string",\n            "null"\n          ],\n          "pattern": "^https?://.+"\n        }\n      }\n    }\n  },\n  "required": [\n    "items"\n  ]\n}\n')))),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"post-v1subscriptionidpay"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," /v1/subscription/:id/pay"),Object(r.b)("p",null,"Defines a recurring payment method for a given subscription. It can be by credit card or banking billet:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Card:")," will charge your card monthly according to the number of repetitions defined by the plan;")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("em",{parentName:"p"},"Boleto:")," will be generated according to the number of repetitions defined by the plan, and can be sent by email. The subscriber or seller can unsubscribe at any time. When this occurs, the two are notified via email, with all the details of the cancellation."))),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("code",null,"POST /v1/subscription/:id/pay")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/post_subscription_pay.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/post_subscription_pay.png")})),Object(r.b)("p",null,"The following is a simple JSON that can be used to associate a payment method with a subscription already created in Playground - the integrator can choose between ",Object(r.b)("inlineCode",{parentName:"p"},"banking_billet")," or ",Object(r.b)("inlineCode",{parentName:"p"},"credit_card")," (bank slip and credit card, respectively) ."),Object(r.b)("p",null,"Also, you can see the predicted output and validation schema with all tags (required and optional) available for this method. Remembering that it is also necessary to inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," input parameter of the subscription associated with the payment method: "),Object(r.b)(s.a,{defaultValue:"entradaCartao",values:[{label:"Dados de Entrada (cart\xe3o)",value:"entradaCartao"},{label:"Dados de Entrada (boleto)",value:"entradaBoleto"},{label:"Dados de Sa\xedda (cart\xe3o)",value:"saidaCartao"},{label:"Dados de Sa\xedda (boleto)",value:"saidaBoleto"},{label:"Schema",value:"schema"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entradaCartao",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payment": {\n    "credit_card": {\n      "customer": {\n        "name": "Gorbadoc Oldbuck",\n        "cpf": "94271564656",\n        "email": "email_do_cliente@servidor.com.br",\n        "birth": "1990-08-29",\n        "phone_number": "5144916523"\n      },\n      "payment_token": "",\n      "billing_address": {\n        "street": "Avenida Juscelino Kubitschek",\n        "number": "909",\n        "neighborhood": "Bauxita",\n        "zipcode": "35400000",\n        "city": "Ouro Preto",\n        "complement": "",\n        "state": "MG"\n      }\n    }\n  }\n}\n'))),Object(r.b)(l.a,{value:"entradaBoleto",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payment": {\n    "banking_billet": {\n      "customer": {\n        "name": "Gorbadoc Oldbuck",\n        "cpf": "94271564656",\n        "email": "email_do_cliente@servidor.com.br",\n        "phone_number": "5144916523",\n        "address": {\n          "street": "Avenida Juscelino Kubitschek",\n          "number": "909",\n          "neighborhood": "Bauxita",\n          "zipcode": "35400000",\n          "city": "Ouro Preto",\n          "complement": "",\n          "state": "MG"\n        }\n      },\n      "expire_at": "2018-12-30",\n      "configurations": {\n        "fine": 200,\n        "interest": 33\n      },\n      "message": "Usando o atributo message, este conte\xfado \xe9 exibido no campo OBSERVA\xc7\xc3O da cobran\xe7a emitida via API \\n ... e tamb\xe9m no campo OBSERVA\xc7\xc3O DO VENDEDOR nos e-mails de cobran\xe7a enviados ao cliente \\n \xc9 poss\xedvel utilizar at\xe9 4 linhas de conte\xfado, com no m\xe1ximo 100 caracteres por linha \\n Essa mensagem poder\xe1 ser vista nos e-mails relacionados \xe0 cobran\xe7a, no boleto ou carn\xea"\n    }\n  }\n}\n'))),Object(r.b)(l.a,{value:"saidaCartao",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": {\n    "subscription_id": 25328, // n\xfamero ID referente \xe0 inscri\xe7\xe3o gerada\n    "status": "active", // assinatura ativa - todas as cobran\xe7as est\xe3o sendo geradas\n    "plan": {\n      "id": 2758, // n\xfamero da ID referente ao plano de assinatura criado\n      "interval": 1, // periodicidade da cobran\xe7a (em meses) - informe 1 para assinatura mensal\n      "repeats": null // n\xfamero de vezes que a cobran\xe7a deve ser gerada (padr\xe3o: null, que significa que a cobran\xe7a \xe9 gerada por tempo indeterminado ou at\xe9 que o plano seja cancelado)\n    },\n    "charge": {\n      "id": 511842, // n\xfamero da ID referente \xe0 transa\xe7\xe3o gerada\n      "status": "waiting", // forma de pagamento selecionada, aguardando a confirma\xe7\xe3o do pagamento\n      "parcel": 1,\n      "total": 7900\n    },\n    "first_execution": "31/10/2018", // data da primeira execu\xe7\xe3o da assinatura\n    "total": 7900,\n    "payment": "credit_card" // forma de pagamento (credit_card equivale a cart\xe3o de cr\xe9dito)\n  }\n}\n'))),Object(r.b)(l.a,{value:"saidaBoleto",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "code": 200, // retorno HTTP "200" informando que o pedido foi bem sucedido\n  "data": {\n    "subscription_id": 25329, // n\xfamero ID referente \xe0 inscri\xe7\xe3o gerada\n    "status": "active", // assinatura ativa - todas as cobran\xe7as est\xe3o sendo geradas\n    "barcode": "00000.00000 00000.000000 00000.000000 0 00000000000000",\n    "link": "link_do_boleto_da_assinatura", // link do boleto gerado\n    "pdf": {\n      "charge": "link_pdf_boleto_assinatura" // link do PDF boleto gerado da assinatura\n    },\n    "expire_at": "2018-12-30", // data de vencimento do boleto no seguinte formato: 2018-12-30 (ou seja, equivale a 30/12/2018)\n    "plan": {\n      "id": 2758, // n\xfamero da ID referente ao plano de assinatura criado\n      "interval": 1, // periodicidade da cobran\xe7a (em meses) - informe 1 para assinatura mensal\n      "repeats": null // n\xfamero de vezes que a cobran\xe7a deve ser gerada (padr\xe3o: null, que significa que a cobran\xe7a \xe9 gerada por tempo indeterminado ou at\xe9 que o plano seja cancelado)\n    },\n    "charge": {\n      "id": 511843, // n\xfamero da ID referente \xe0 transa\xe7\xe3o gerada\n      "status": "waiting", // forma de pagamento selecionada, aguardando a confirma\xe7\xe3o do pagamento\n      "parcel": 1,\n      "total": 7900\n    },\n    "first_execution": "31/10/2018", // data da primeira execu\xe7\xe3o da assinatura\n    "total": 7900,\n    "payment": "banking_billet" // forma de pagamento (banking_billet equivale a boleto)\n  }\n}\n'))),Object(r.b)(l.a,{value:"schema",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "object",\n  "id": "/SubscriptionPay",\n  "properties": {\n    "payment": {\n      "type": "object",\n      "maxProperties": 1,\n      "minProperties": 1,\n      "properties": {\n        "banking_billet": {\n          "type": "object",\n          "id": "/Billet",\n          "properties": {\n            "customer": {\n              "type": "object",\n              "id": "/BasicCustomer",\n              "properties": {\n                "name": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "minLength": 1,\n                  "maxLength": 255,\n                  "pattern": "^[ ]*(.+[ ]+)+.+[ ]*$"\n                },\n                "cpf": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "minLength": 11,\n                  "maxLength": 11\n                },\n                "email": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "maxLength": 255,\n                  "pattern": "^[A-Za-z0-9_\\\\-]+(?:[.][A-Za-z0-9_\\\\-]+)*@[A-Za-z0-9_]+(?:[-.][A-Za-z0-9_]+)*\\\\.[A-Za-z0-9_]+$"\n                },\n                "phone_number": {\n                  "type": "string",\n                  "pattern": "^[1-9]{2}9?[0-9]{8}$"\n                },\n                "birth": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$"\n                },\n                "address": {\n                  "type": "object",\n                  "id": "/AddressOptional",\n                  "properties": {\n                    "street": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 0,\n                      "maxLength": 200\n                    },\n                    "number": {\n                      "type": [\n                        "string",\n                        "null",\n                        "integer"\n                      ],\n                      "minLength": 0,\n                      "maxLength": 55\n                    },\n                    "neighborhood": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 0,\n                      "maxLength": 255\n                    },\n                    "zipcode": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "pattern": "^[0-9]{8}$"\n                    },\n                    "city": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 0,\n                      "maxLength": 50\n                    },\n                    "complement": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 0,\n                      "maxLength": 45\n                    },\n                    "state": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "pattern": "^(?:A[CLPM]|BA|CE|DF|ES|GO|M[ATSG]|P[RBAEI]|R[JNSOR]|S[CEP]|TO)$"\n                    }\n                  }\n                },\n                "juridical_person": {\n                  "type": "object",\n                  "id": "/JuridicalPerson",\n                  "properties": {\n                    "corporate_name": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 1,\n                      "maxLength": 255\n                    },\n                    "cnpj": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 14,\n                      "maxLength": 14\n                    }\n                  },\n                  "required": [\n                    "corporate_name",\n                    "cnpj"\n                  ]\n                }\n              },\n              "required": [\n                "phone_number"\n              ]\n            },\n            "expire_at": {\n              "type": "string",\n              "pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$"\n            },\n            "discount": {\n              "type": "object",\n              "id": "/Discount",\n              "properties": {\n                "type": {\n                  "type": "string",\n                  "enum": [\n                    "percentage",\n                    "currency"\n                  ]\n                },\n                "value": {\n                  "type": "integer",\n                  "minimum": 1\n                }\n              },\n              "required": [\n                "type",\n                "value"\n              ]\n            },\n            "conditional_discount": {\n              "id": "/ConditionalDiscount",\n              "type": "object",\n              "properties": {\n                "type": {\n                  "type": "string",\n                  "enum": [\n                    "percentage",\n                    "currency"\n                  ]\n                },\n                "value": {\n                  "type": "integer",\n                  "minimum": 1\n                },\n                "until_date": {\n                  "type": "string",\n                  "pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$"\n                }\n              },\n              "required": [\n                "type",\n                "value",\n                "until_date"\n              ]\n            },\n            "instructions": {\n              "type": "array",\n              "minItems": 1,\n              "maxItems": 4,\n              "items": {\n                "type": "string",\n                "minLength": 1,\n                "maxLength": 90\n              }\n            },\n            "configurations": {\n              "type": "object",\n              "id": "/Configurations",\n              "minProperties": 1,\n              "properties": {\n                "fine": {\n                  "type": "integer",\n                  "minimum": 0,\n                  "maximum": 1000\n                },\n                "interest": {\n                  "type": "integer",\n                  "minimum": 0,\n                  "maximum": 330\n                }\n              }\n            },\n            "message": {\n              "type": "string",\n              "pattern": "^[^\\n]{0,100}(\\n[^\\n]{0,100}){0,3}$"\n            }\n          },\n          "required": [\n            "customer",\n            "expire_at"\n          ]\n        },\n        "credit_card": {\n          "type": "object",\n          "id": "/CreditCard",\n          "properties": {\n            "customer": {\n              "type": "object",\n              "id": "/FullCustomer",\n              "properties": {\n                "name": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "minLength": 1,\n                  "maxLength": 255,\n                  "pattern": "^[ ]*(.+[ ]+)+.+[ ]*$"\n                },\n                "cpf": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "minLength": 11,\n                  "maxLength": 11\n                },\n                "email": {\n                  "type": "string",\n                  "maxLength": 255,\n                  "pattern": "^[A-Za-z0-9_\\\\-]+(?:[.][A-Za-z0-9_\\\\-]+)*@[A-Za-z0-9_]+(?:[-.][A-Za-z0-9_]+)*\\\\.[A-Za-z0-9_]+$"\n                },\n                "phone_number": {\n                  "type": "string",\n                  "pattern": "^[1-9]{2}9?[0-9]{8}$"\n                },\n                "birth": {\n                  "type": "string",\n                  "pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$"\n                },\n                "address": {\n                  "type": "object",\n                  "id": "/Address",\n                  "properties": {\n                    "street": {\n                      "type": "string",\n                      "minLength": 1,\n                      "maxLength": 200\n                    },\n                    "number": {\n                      "type": [\n                        "string",\n                        "integer"\n                      ],\n                      "minLength": 1,\n                      "maxLength": 55\n                    },\n                    "neighborhood": {\n                      "type": "string",\n                      "minLength": 1,\n                      "maxLength": 255\n                    },\n                    "zipcode": {\n                      "type": "string",\n                      "pattern": "^[0-9]{8}$"\n                    },\n                    "city": {\n                      "type": "string",\n                      "minLength": 1,\n                      "maxLength": 50\n                    },\n                    "complement": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 0,\n                      "maxLength": 45\n                    },\n                    "state": {\n                      "type": "string",\n                      "pattern": "^(?:A[CLPM]|BA|CE|DF|ES|GO|M[ATSG]|P[RBAEI]|R[JNSOR]|S[CEP]|TO)$"\n                    }\n                  },\n                  "required": [\n                    "street",\n                    "number",\n                    "neighborhood",\n                    "zipcode",\n                    "city",\n                    "state"\n                  ]\n                },\n                "juridical_person": {\n                  "type": "object",\n                  "id": "/JuridicalPerson",\n                  "properties": {\n                    "corporate_name": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 1,\n                      "maxLength": 255\n                    },\n                    "cnpj": {\n                      "type": [\n                        "string",\n                        "null"\n                      ],\n                      "minLength": 14,\n                      "maxLength": 14\n                    }\n                  },\n                  "required": [\n                    "corporate_name",\n                    "cnpj"\n                  ]\n                }\n              },\n              "required": [\n                "email",\n                "phone_number",\n                "birth"\n              ]\n            },\n            "billing_address": {\n              "type": "object",\n              "id": "/Address",\n              "properties": {\n                "street": {\n                  "type": "string",\n                  "minLength": 1,\n                  "maxLength": 200\n                },\n                "number": {\n                  "type": [\n                    "string",\n                    "integer"\n                  ],\n                  "minLength": 1,\n                  "maxLength": 55\n                },\n                "neighborhood": {\n                  "type": "string",\n                  "minLength": 1,\n                  "maxLength": 255\n                },\n                "zipcode": {\n                  "type": "string",\n                  "pattern": "^[0-9]{8}$"\n                },\n                "city": {\n                  "type": "string",\n                  "minLength": 1,\n                  "maxLength": 50\n                },\n                "complement": {\n                  "type": [\n                    "string",\n                    "null"\n                  ],\n                  "minLength": 0,\n                  "maxLength": 45\n                },\n                "state": {\n                  "type": "string",\n                  "pattern": "^(?:A[CLPM]|BA|CE|DF|ES|GO|M[ATSG]|P[RBAEI]|R[JNSOR]|S[CEP]|TO)$"\n                }\n              },\n              "required": [\n                "street",\n                "number",\n                "neighborhood",\n                "zipcode",\n                "city",\n                "state"\n              ]\n            },\n            "payment_token": {\n              "type": "string",\n              "pattern": "^[a-fA-F0-9]{40}$"\n            },\n            "discount": {\n              "type": "object",\n              "id": "/Discount",\n              "properties": {\n                "type": {\n                  "type": "string",\n                  "enum": [\n                    "percentage",\n                    "currency"\n                  ]\n                },\n                "value": {\n                  "type": "integer",\n                  "minimum": 1\n                }\n              },\n              "required": [\n                "type",\n                "value"\n              ]\n            },\n            "message": {\n              "type": "string",\n              "pattern": "^[^\\n]{0,100}(\\n[^\\n]{0,100}){0,3}$"\n            },\n            "trial_days": {\n              "type": "integer",\n              "minimum": 1,\n              "maximum": 365\n            }\n          },\n          "required": [\n            "customer",\n            "billing_address",\n            "payment_token"\n          ]\n        }\n      }\n    }\n  },\n  "required": [\n    "payment"\n  ]\n}\n')))),Object(r.b)("p",null,'This JSON associates a particular signature with a payment method, which can be a bank slip or credit card. In the case of payment by card, the "payment_token" is the payment token, which is obtained through Javascript code available for each Gerencianet account - for bank slip the "payment_token" is not necessary. '),Object(r.b)("br",null),Object(r.b)("hr",null),Object(r.b)("h3",{id:"post-v1subscriptionidhistory"},Object(r.b)(b,{color:"#009615",mdxType:"Highlight"},"POST")," /v1/subscription/:id/history"),Object(r.b)("p",null,"The history of a subscription represents all actions that have taken place with that subscription so far. You can add custom messages to this history using the ",Object(r.b)("inlineCode",{parentName:"p"},"/v1/subscription/:id/history")," endpoint."),Object(r.b)("p",null,"Personalized messages do not influence in the subscription itself, only its history. To do so, you must inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," of the desired transaction. This description must have a minimum of one character and a maximum of 255 characters."),Object(r.b)("p",null,"In the following image, you can see the screen of our test environment, which contains the resources linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"POST /v1/subscription/:id/history")," method that are available for use: "),Object(r.b)("a",{href:Object(o.a)("img/post-subscription-history.png"),target:"_blank"},Object(r.b)("img",{src:Object(o.a)("img/post-subscription-history.png")})),Object(r.b)("p",null,"The following is a simple JSON that allows you to add custom messages to a subscription's history, as well as the predicted output and validation schema with all tags (required and optional) available for this method. Remembering that you must inform the ",Object(r.b)("inlineCode",{parentName:"p"},"subscription_id")," input parameter of the subscription: "),Object(r.b)(s.a,{defaultValue:"entrada",values:[{label:"Dados de Entrada",value:"entrada"},{label:"Dados de Sa\xedda",value:"saida"},{label:"Schema",value:"schema"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"entrada",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n"description": "Minha mensagem do hist\xf3rico aqui"\n}\n'))),Object(r.b)(l.a,{value:"saida",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n"code": 200\n}\n'))),Object(r.b)(l.a,{value:"schema",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n"type": "object",\n"id": "/SubscriptionHistory",\n"properties": {\n  "description": {\n    "type": "string",\n    "maxLength": "255",\n    "minLength": "1"\n  }\n},\n"required": [\n  "description"\n]\n}\n'))))))}m.isMDXComponent=!0},250:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),d=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=d(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=d(t),u=a,m=b["".concat(o,".").concat(u)]||b[u]||p[u]||r;return t?i.a.createElement(m,s(s({ref:n},c),{},{components:t})):i.a.createElement(m,s({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},251:function(e,n,t){"use strict";var a=t(0),i=t(35);n.a=function(){return Object(a.useContext)(i.a)}},252:function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));var a=t(251),i=t(253);function r(e,{forcePrependBaseUrl:n=!1,absolute:t=!1}={}){const{siteConfig:{baseUrl:r="/",url:o}={}}=Object(a.a)();if(!e)return e;if(n)return r+e;if(!Object(i.a)(e))return e;const s=r+e.replace(/^\//,"");return t?o+s:s}},253:function(e,n,t){"use strict";function a(e){return!1===/^(https?:|\/\/|mailto:|tel:)/.test(e)}t.d(n,"a",(function(){return a}))},254:function(e,n,t){"use strict";function a(e){var n,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(i&&(i+=" "),i+=t);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}n.a=function(){for(var e,n,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(i&&(i+=" "),i+=n);return i}},255:function(e,n,t){"use strict";var a=t(0);const i=Object(a.createContext)({tabGroupChoices:{},setTabGroupChoices:()=>{},isAnnouncementBarClosed:!1,closeAnnouncementBar:()=>{}});n.a=i},256:function(e,n,t){"use strict";var a=t(0),i=t(255);n.a=function(){return Object(a.useContext)(i.a)}},257:function(e,n,t){"use strict";var a=t(0),i=t.n(a),r=t(256),o=t(254),s=t(92),l=t.n(s);const c=37,d=39;n.a=function(e){const{block:n,children:t,defaultValue:s,values:b,groupId:p}=e,{tabGroupChoices:u,setTabGroupChoices:m}=Object(r.a)(),[h,g]=Object(a.useState)(s);if(null!=p){const e=u[p];null!=e&&e!==h&&b.some(n=>n.value===e)&&g(e)}const O=e=>{g(e),null!=p&&m(p,e)},j=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n})},b.map(({value:e,label:n})=>i.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":h===e,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===e}),key:e,ref:e=>j.push(e),onKeyDown:e=>((e,n,t)=>{switch(t.keyCode){case d:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case c:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(j,e.target,e),onFocus:()=>O(e),onClick:()=>O(e)},n))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter(e=>e.props.value===h)[0]))}},258:function(e,n,t){"use strict";var a=t(0),i=t.n(a);n.a=function(e){return i.a.createElement("div",null,e.children)}}}]);